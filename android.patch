diff --git a/qtmultimedia/src/plugins/android/src/mediacapture/qandroidcamerasession.cpp b/qtmultimedia/src/plugins/android/src/mediacapture/qandroidcamerasession.cpp
index b7d8877..e598327 100644
--- a/qtmultimedia/src/plugins/android/src/mediacapture/qandroidcamerasession.cpp
+++ b/qtmultimedia/src/plugins/android/src/mediacapture/qandroidcamerasession.cpp
@@ -273,6 +273,13 @@ void QAndroidCameraSession::applyViewfinderSettings(const QSize &captureSize, bo
     if (!m_camera)
         return;
 
+    qWarning() << "Is video stabilization supported: " << m_camera->isVideoStabilizationSupported();
+
+    if (m_camera->isVideoStabilizationSupported() && !m_camera->getVideoStabilization()) {
+        qWarning() << "Enabling video stabilization...";
+        m_camera->setVideoStabilization(true);
+    }
+
     const QSize currentViewfinderResolution = m_camera->previewSize();
     const AndroidCamera::ImageFormat currentPreviewFormat = m_camera->getPreviewFormat();
     const AndroidCamera::FpsRange currentFpsRange = m_camera->getPreviewFpsRange();
diff --git a/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.cpp b/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.cpp
index 24b2ebd..b4a9780 100644
--- a/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.cpp
+++ b/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.cpp
@@ -210,6 +210,10 @@ public:
     Q_INVOKABLE int getZoom();
     Q_INVOKABLE void setZoom(int value);
 
+    Q_INVOKABLE bool isVideoStabilizationSupported();
+    Q_INVOKABLE bool getVideoStabilization();
+    Q_INVOKABLE void setVideoStabilization(bool toggle);
+
     Q_INVOKABLE QString getFlashMode();
     Q_INVOKABLE void setFlashMode(const QString &value);
 
@@ -524,6 +528,24 @@ void AndroidCamera::setZoom(int value)
     QMetaObject::invokeMethod(d, "setZoom", Q_ARG(int, value));
 }
 
+bool AndroidCamera::isVideoStabilizationSupported()
+{
+    Q_D(AndroidCamera);
+    return d->isVideoStabilizationSupported();
+}
+
+bool AndroidCamera::getVideoStabilization()
+{
+    Q_D(AndroidCamera);
+    return d->getVideoStabilization();
+}
+
+void AndroidCamera::setVideoStabilization(bool toggle)
+{
+    Q_D(AndroidCamera);
+    QMetaObject::invokeMethod(d, "setVideoStabilization", Q_ARG(bool, toggle));
+}
+
 QStringList AndroidCamera::getSupportedFlashModes()
 {
     Q_D(AndroidCamera);
@@ -1178,6 +1200,37 @@ void AndroidCameraPrivate::setZoom(int value)
     applyParameters();
 }
 
+bool AndroidCameraPrivate::isVideoStabilizationSupported()
+{
+    QMutexLocker parametersLocker(&m_parametersMutex);
+
+    if (!m_parameters.isValid())
+        return false;
+
+    return m_parameters.callMethod<jboolean>("isVideoStabilizationSupported");
+}
+
+bool AndroidCameraPrivate::getVideoStabilization()
+{
+    QMutexLocker parametersLocker(&m_parametersMutex);
+
+    if (!m_parameters.isValid())
+        return 0;
+
+    return m_parameters.callMethod<jboolean>("getVideoStabilization");
+}
+
+void AndroidCameraPrivate::setVideoStabilization(bool toggle)
+{
+    QMutexLocker parametersLocker(&m_parametersMutex);
+
+    if (!m_parameters.isValid())
+        return;
+
+    m_parameters.callMethod<void>("setVideoStabilization", "(Z)V", toggle);
+    applyParameters();
+}
+
 QString AndroidCameraPrivate::getFlashMode()
 {
     QMutexLocker parametersLocker(&m_parametersMutex);
diff --git a/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.h b/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.h
index 7d00f80..1e10c29 100644
--- a/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.h
+++ b/qtmultimedia/src/plugins/android/src/wrappers/jni/androidcamera.h
@@ -144,6 +144,10 @@ public:
     int getZoom();
     void setZoom(int value);
 
+    bool isVideoStabilizationSupported();
+    bool getVideoStabilization();
+    void setVideoStabilization(bool toggle);
+
     QStringList getSupportedFlashModes();
     QString getFlashMode();
     void setFlashMode(const QString &value);
